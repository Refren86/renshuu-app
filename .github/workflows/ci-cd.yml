name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  frontend-tests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Check TypeScript compilation
        working-directory: ./frontend
        run: npx tsc -b

      - name: Run frontend tests
        working-directory: ./frontend
        run: npm run test

      - name: Build frontend
        working-directory: ./frontend
        run: npm run build

  deploy:
    needs: frontend-tests
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Google Auth
        id: auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Configure Docker for Artifact Registry
        run: |
          gcloud auth configure-docker ${{ secrets.GCP_REGION }}-docker.pkg.dev --quiet

      # Create a version tag based on commit (YYYYMMDD-commit)
      - name: Set image tag
        id: set-tag
        run: echo "IMAGE_TAG=$(date +'%Y%m%d')-$(echo ${{ github.sha }} | cut -c1-7)" >> $GITHUB_ENV

      - name: Build and push backend image
        working-directory: ./server
        run: |
          docker build -t renshuu-backend -f Dockerfile.prod .
          docker tag renshuu-backend ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.ARTIFACT_REPO }}/renshuu-backend:${{ env.IMAGE_TAG }}
          docker tag renshuu-backend ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.ARTIFACT_REPO }}/renshuu-backend:latest
          docker push ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.ARTIFACT_REPO }}/renshuu-backend:${{ env.IMAGE_TAG }}
          docker push ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.ARTIFACT_REPO }}/renshuu-backend:latest

      - name: Build and push frontend image
        working-directory: ./frontend
        run: |
          docker build -t renshuu-web -f Dockerfile.prod .
          docker tag renshuu-web ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.ARTIFACT_REPO }}/renshuu-web:${{ env.IMAGE_TAG }}
          docker tag renshuu-web ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.ARTIFACT_REPO }}/renshuu-web:latest
          docker push ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.ARTIFACT_REPO }}/renshuu-web:${{ env.IMAGE_TAG }}
          docker push ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.ARTIFACT_REPO }}/renshuu-web:latest

      - name: Deploy backend to Cloud Run
        id: deploy-backend
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: renshuu
          region: ${{ secrets.GCP_REGION }}
          image: ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.ARTIFACT_REPO }}/renshuu-backend:${{ env.IMAGE_TAG }}

      - name: Deploy frontend to Cloud Run
        id: deploy-frontend
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: renshuu
          region: ${{ secrets.GCP_REGION }}
          image: ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.ARTIFACT_REPO }}/renshuu-web:${{ env.IMAGE_TAG }}

      - name: Show outputs
        run: |
          echo "Backend URL: ${{ steps.deploy-backend.outputs.url }}"
          echo "Frontend URL: ${{ steps.deploy-frontend.outputs.url }}"
